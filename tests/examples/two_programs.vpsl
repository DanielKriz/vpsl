#pragma vp shader name(included) type(generic)
#pragma vp begin
#version 450
float double_it(float val) { return val * 2.0f; }
#pragma vp end

#pragma vp shader name(other) type(generic)
#pragma vp begin
#version 450
#pragma vp end

float h() { return 0.5f; }

#pragma vp program name(main) draw(triangles, 3)
#pragma vp begin

#pragma vp shader name(main_vs) type(vertex) prepend(global:other)
#pragma vp begin
void main() {
    const vec4 vertices[3] = vec4[3](
        vec4(-h(), -0.5f, 0.0f, 1.0f),
        vec4( h(), -0.5f, 0.0f, 1.0f),
        vec4( h(),  0.5f, 0.0f, 1.0f)
    );
    gl_Position = vertices[gl_VertexID];
}

#pragma vp end // main_vs
#pragma vp shader name(main_fs) type(fragment) prepend(global:other)
#pragma vp begin
layout (location = 0) out vec4 color;

void main() { color = vec4(1.0f, 0.0f, 0.0f, 1.0f); }

#pragma vp end // main_fs
#pragma vp end // main

#pragma vp program name(the_second) draw(line_loop, 3)
#pragma vp begin

#pragma vp shader name(main_vs) type(vertex) prepend(global:included)
#pragma vp begin

void main() {
    const vec4 vertices[3] = vec4[3](
        vec4(-0.5f, -0.5f, 0.0f, 1.0f),
        vec4( 0.5f, -0.5f, 0.0f, 1.0f),
        vec4( double_it(0.5f),  0.5f, 0.0f, 1.0f)
    );
    gl_Position = vertices[gl_VertexID];
}

#pragma vp end // main_vs
#pragma vp shader name(main_fs) type(fragment) prepend(global:other)
#pragma vp begin
layout (location = 0) out vec4 color;

void main() { color = vec4(0.0f, 0.0f, 1.0f, 1.0f); }

#pragma vp end // main_fs
#pragma vp end // main
