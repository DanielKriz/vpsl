#pragma vp load texture name(bricks) path(tests/examples/wall.jpg)
// #pragma vp load texture name(bricks) path(tests/img.png)

#pragma vp program draw(triangles, 3)
#pragma vp begin

#pragma vp shader name(main_vs) type(vertex)
#pragma vp begin

#version 450 core

layout (location = 0) out VS_OUT {
    vec2 tex_coords;
} vs_out;

void main() {
    const vec2 tex_coords[3] = vec2[3](
        vec2(0.0f, 0.0f),
        vec2(1.0f, 0.0f),
        vec2(0.5f, 1.0f)
    );
    const vec4 vertices[3] = vec4[3](
        vec4(-0.5f, -0.5f, 0.0f, 1.0f),
        vec4( 0.5f, -0.5f, 0.0f, 1.0f),
        vec4( 0.0f,  0.5f, 0.0f, 1.0f)
    );
    gl_Position = vertices[gl_VertexID];
    vs_out.tex_coords = vec2(tex_coords[gl_VertexID].x, tex_coords[gl_VertexID].y);
}

#pragma vp end // vertex shader

#pragma vp shader name(main_fs) type(fragment)
#pragma vp begin

#version 450 core

layout(location = 0) out vec4 color;

#pragma vp texture name(bricks)
layout(binding = 1) uniform sampler2D brick_texture;

layout(location = 2) in VS_OUT {
    vec2 tex_coords;
} fs_in;

void main() {
    color = texture(brick_texture, fs_in.tex_coords);
}

#pragma vp end // fragment shader

#pragma vp end // program
